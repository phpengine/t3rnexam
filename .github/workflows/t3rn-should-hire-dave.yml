name: CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v2

      - name: ls
        run: ls -alh $GITHUB_WORKSPACE

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: update apt
        run: sudo apt-get update

      - name: install basic tools and rust
        run: sudo apt-get install -y git curl docker.io containerd runc

      - name: silent install rust
        run: curl https://sh.rustup.rs -sSf | sh -s -- -y

      - name: Fetch the substrate node template repo
        run: git clone https://github.com/substrate-developer-hub/substrate-node-template.git

      - name: Substrate Initialise Script
        run: |
          cd substrate-node-template/scripts
          ./init.sh

      - name: Create the release build
        run: |
          cd substrate-node-template
          cargo build --release
          ls -lah
          ls -lah target/
          ls -lah target/release/

      - name: Creates a Docker image of the template node
        run: docker build . -t t3rnsubstrate:1.0

      - name: List images
        run: docker image ls

      - name: Login to GHCR - additional step 1 for extra points
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publishes the image to a container registry (DockerHub or GHCR)
        run: |
          DOCKER_IMAGE_ID=$( docker image ls | grep t3rnsubstrate | awk '{ print $3 }' )
          docker tag $DOCKER_IMAGE_ID fantasticfables/t3rnsubstrate:latest
          docker push fantasticfables/t3rnsubstrate:latest
          docker tag $DOCKER_IMAGE_ID ghcr.io/phpengine/t3rnsubstrate:latest
          docker push ghcr.io/phpengine/t3rnsubstrate:latest

#      This is commented out as I haven't created a telegram group before, I dont have telegram
#      I've done the same for slack though, and included what would be the correct code

#      - name: Telegram bot notifies a group of your choice
#        uses: appleboy/telegram-action@master
#        with:
#          to: ${{ secrets.TELEGRAM_TO }}
#          token: ${{ secrets.TELEGRAM_TOKEN }}
#          message: All the things to hire Dave

#      - name: Publishes the image to a second container registry - additional step 1 for extra points
#        run: |